(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))m(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const l of r.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&m(l)}).observe(document,{childList:!0,subtree:!0});function w(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function m(t){if(t.ep)return;t.ep=!0;const r=w(t);fetch(t.href,r)}})();const f=document.querySelector("#webcam"),a=document.querySelector("#start-record"),y=document.querySelector("#start-camera"),v=document.querySelector("#stop-record"),u=document.querySelector("#download-link"),c=document.querySelector("#video-devices"),n=document.querySelector("#audio-devices"),b=document.querySelector(".red-dot");let i,s=[],d=null;async function L(){try{const o=await navigator.mediaDevices.enumerateDevices();c.innerHTML=o.filter(e=>e.kind==="videoinput").map(e=>`<option value="${e.deviceId}">${e.label||`Video Device ${c.options.length+1}`}</option>`).join(""),n.innerHTML=o.filter(e=>e.kind==="audioinput").map(e=>`<option value="${e.deviceId}">${e.label||`Audio Device ${n.options.length+1}`}</option>`).join("")}catch(o){console.error("Error accessing devices:",o)}}async function p(o){try{d&&g(d),d=await navigator.mediaDevices.getUserMedia(o),f.srcObject=d,a.disabled=!1,y.disabled=!0}catch(e){console.error("Error accessing media:",e)}}function g(o){o.getTracks().forEach(e=>e.stop())}c.addEventListener("change",async()=>{await p({video:{deviceId:c.value},audio:{deviceId:n.value}})});n.addEventListener("change",async()=>{await p({video:{deviceId:c.value},audio:{deviceId:n.value}})});y.addEventListener("click",async()=>{await p({video:{deviceId:c.value},audio:{deviceId:n.value}}),L()});a.addEventListener("click",()=>{s=[],i=new MediaRecorder(d,{mimeType:"video/webm; codecs=vp9"}),i.ondataavailable=o=>{o.data.size>0&&s.push(o.data)},i.start(),b.classList.add("show"),f.classList.add("red-border"),a.disabled=!0,v.disabled=!1});v.addEventListener("click",()=>{(i==null?void 0:i.state)==="recording"&&(i.stop(),b.classList.remove("show"),f.classList.remove("red-border"),v.disabled=!0,a.disabled=!1),i.onstop=()=>{const o=new Blob(s,{type:"video/webm"});u.href=URL.createObjectURL(o),u.download=`recording-${Date.now()}.webm`,u.style.display="block",s=[]}});window.addEventListener("beforeunload",()=>{d&&g(d)});
